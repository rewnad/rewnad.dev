---
import Layout from '../../layouts/Layout.astro';

const projects = [
  {
    id: 'ai-chat',
    title: 'Simple Chat',
    description: 'Simple chat with AI.',
    imageAlt: 'Simple Chat project',
    fullDescription: 'A simple chat application that allows users to interact with AI. Built with modern web technologies and designed for ease of use.',
    technologies: ['React', 'TypeScript', 'AI API'],
    status: 'In Development'
  },
];

export function getStaticPaths() {
  return projects.map((project) => ({
    params: { id: project.id },
    props: { project },
  }));
}

const { project } = Astro.props;
const { id } = Astro.params;

// Fallback if project is not found in props
const currentProject = project || projects.find(p => p.id === id);
---

<Layout>
  <main>
    <div class="container">
      <nav class="breadcrumb">
        <a href="/">‚Üê Back to Home</a>
      </nav>
      
      <div class="project-header">
        <div class="project-image">
          <div class="placeholder-image" />
        </div>
        <div class="project-details">
          <h1>{currentProject.title}</h1>
          <p class="description">{currentProject.fullDescription}</p>
          <div class="meta">
            <div class="status">
              <span class="label">Status:</span>
              <span class="value">{currentProject.status}</span>
            </div>
            <div class="technologies">
              <span class="label">Technologies:</span>
              <div class="tech-list">
                {currentProject.technologies.map((tech) => (
                  <span class="tech-tag">{tech}</span>
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>

<style>
  .container {
    max-width: 800px;
    margin: 0 auto;
    padding: 40px 20px;
  }

  .breadcrumb {
    margin-bottom: 32px;
  }

  .breadcrumb a {
    color: #666;
    text-decoration: none;
    font-size: 14px;
    transition: color 0.2s;
  }

  .breadcrumb a:hover {
    color: #000;
  }

  .project-header {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 40px;
    align-items: start;
  }

  .project-image {
    width: 100%;
    aspect-ratio: 16 / 10;
    background: #f5f5f5;
    border-radius: 16px;
    overflow: hidden;
    border: 1px solid #e5e5e5;
  }

  .placeholder-image {
    width: 100%;
    height: 100%;
    background: #e5e5e5;
  }

  .project-details h1 {
    font-size: 32px;
    font-weight: 600;
    color: #000;
    margin: 0 0 16px 0;
  }

  .description {
    font-size: 16px;
    line-height: 1.6;
    color: #666;
    margin: 0 0 32px 0;
  }

  .meta {
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  .status, .technologies {
    display: flex;
    align-items: flex-start;
    gap: 12px;
  }

  .label {
    font-size: 14px;
    font-weight: 500;
    color: #000;
    min-width: 80px;
  }

  .value {
    font-size: 14px;
    color: #666;
  }

  .tech-list {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
  }

  .tech-tag {
    background: #f0f0f0;
    color: #666;
    padding: 4px 12px;
    border-radius: 12px;
    font-size: 12px;
    font-weight: 500;
  }

  @media (max-width: 768px) {
    .container {
      padding: 32px 20px;
    }

    .project-header {
      grid-template-columns: 1fr;
      gap: 24px;
    }

    .project-details h1 {
      font-size: 24px;
    }

    .status, .technologies {
      flex-direction: column;
      gap: 8px;
    }

    .label {
      min-width: auto;
    }
  }
</style>
